PREFIX : <https://sdbm.library.upenn.edu/>
PREFIX frbroo: <http://erlangen-crm.org/efrbroo/>
PREFIX crm: <http://www.cidoc-crm.org/cidoc-crm/>
PREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>
PREFIX mmm: <http://ldf.fi/mmm/>
PREFIX mmm-schema: <http://ldf.fi/mmm/schema/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>

# TODO:
# - create instances of sources, people and places (separate SPARQL CONSTRUCT?)
# - generate URIs: material, language, dimension unit
# - handle entries with two manuscript records: uncertainty vs. pieces of manuscript?
# - use :entry_manuscripts_relation_type (is/partial/possible)
# "Select <is> for Entries that describe the same manuscript. Select <partial> for Entries that describe fragments of a manuscript. Fragmented manuscripts are most obvious by sharing many manuscript details with their linked Entries except for such key indicators as folio count and the most complete title listings. Select Possible if you are unsure whether the Entry describes the same manuscript."
CONSTRUCT {
  ?work a frbroo:F1_Work  .

  ?expression a frbroo:F2_Expression ;
    crm:P72_has_language ?language .

  ?expression_creation a frbroo:F28_Expression_Creation ;
    frbroo:R17_created ?expression ;
    frbroo:R18_created ?manifestation_singleton ;
    frbroo:R19_created_a_realisation_of ?work ;
    crm:P14_carried_out_by ?author ;
    crm:P7_took_place_at ?place ;
    crm:P4_has_time_span ?creation_timespan .

  ?creation_timespan a crm:E52_Time-Span ;
    rdfs:label ?creation_date_label ;
    crm:P79_beginning_is_qualified_by ?creation_date_start ;
    crm:P80_end_is_qualified_by ?creation_date_end .

  ?manifestation_singleton a frbroo:F4_Manifestation_Singleton ;
    crm:P128_carries ?expression ; # TODO: or frbr:R42_is_representative_manifestation_singleton_for ?
    rdfs:label ?title ; # TODO: move to Expression, use Title class?
    skos:prefLabel ?preflabel ;
    crm:P1_is_identified_by ?manuscript ;
    crm:P43_has_dimension ?width_uri ;
    crm:P45_consists_of ?material ;
    crm:P51_has_former_or_current_owner ?prov_agent ;
    mmm-schema:manuscript_record ?manuscript . # for showing a link to SDBM UI in faceter

  ?width_uri a mmm-schema:Width ;
    crm:P90_has_value ?width_value ;
    crm:P91_has_unit "mm"@en .

  ?acquisition_uri a frbroo:E8_Acquisition ;
    crm:P24_transferred_title_of ?manifestation_singleton ;
    crm:P23_transferred_title_from ?seller ;
    crm:P22_transferred_title_to ?buyer ;
    crm:P14_carried_out_by ?selling_agent ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  ?production a frbroo:E12_Production .

  # provenance reification
  ?reification_owner_uri
    a rdf:Statement ;
    rdf:subject ?manifestation_singleton ;
    rdf:predicate crm:P51_has_former_or_current_owner ;
    rdf:object ?prov_agent ;
    mmm-schema:order ?prov_order ;
    rdfs:comment ?prov_comment ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  # title reification
  ?reification_label_uri
    a rdf:Statement ;
    rdf:subject ?manifestation_singleton ;
    rdf:predicate rdfs:label ;
    rdf:object ?title ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  # identifier reification
  ?reification_id_uri a rdf:Statement ;
    rdf:subject ?manifestation_singleton ;
    rdf:predicate crm:P48_has_preferred_identifier ;
    rdf:object ?manuscript_id ;
    dc:source ?source .

  # author reification
  ?reification_author_uri
    a rdf:Statement ;
    rdf:subject ?expression_creation ;
    rdf:predicate crm:P14_carried_out_by ;
    rdf:object ?author ;
    mmm-schema:entry ?entry ;
    :observed_author ?observed_author ;
    dc:source ?source .

  # creation date reification
  ?reification_expression_creation_time_uri
    a rdf:Statement ;
    rdf:subject ?expression_creation ;
    rdf:predicate crm:P4_has_time_span ;
    rdf:object ?creation_timespan ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  # artist reification

  # scribe reification

  # language reification
  ?reification_language_uri
    a rdf:Statement ;
    rdf:subject ?expression;
    rdf:predicate crm:P72_has_language ;
    rdf:object ?language ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  # place reification
  ?reification_expression_creation_place_uri a rdf:Statement ;
    rdf:subject ?expression_creation ;
    rdf:predicate crm:P7_took_place_at ;
    rdf:object ?place ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  # material reification
  ?reification_material_uri
    a rdf:Statement ;
    rdf:subject ?manifestation_singleton;
    rdf:predicate crm:P45_consists_of ;
    rdf:object ?material ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  # use reification

  # folios reification

  # lines reification

  # columns reification

  # height reification

  # width reification
  ?reification_width_uri
    a rdf:Statement;
    rdf:subject ?manifestation_singleton;
    rdf:predicate crm:P43_has_dimension ;
    rdf:object ?width_uri ;
    mmm-schema:entry ?entry ;
    dc:source ?source .

  # alternate size reification

  # full-page miniatures reification

  # large miniatures reification

  # small miniatures reification

  # unspec. sized miniatures reification

  # historiated initials reification

  # decorated initials reification

  # binding reification

  # manuscript link reification

  # other Info reification

}
#SELECT *
WHERE {
  #BIND (<https://sdbm.library.upenn.edu/manuscripts/12463> AS ?manuscript)
  #BIND (<https://sdbm.library.upenn.edu/manuscripts/13354> AS ?manuscript) # manuscript with sales information: buyer, seller, sales agent known
  #    ?entry_manuscript :entry_manuscripts_manuscript_id ?manuscript ;
  #                      :entry_manuscripts_entry_id ?entry .
  #BIND (<https://sdbm.library.upenn.edu/entries/51493> AS ?entry) # entry with no manuscript record

  ?entry a :entries .

  OPTIONAL {
    ?entry_manuscript :entry_manuscripts_entry_id ?entry .
    ?entry_manuscript a :entry_manuscripts .
    ?entry_manuscript :entry_manuscripts_manuscript_id ?manuscript .
    ?entry_manuscript :entry_manuscripts_relation_type ?relation_type .
    ?manuscript a :manuscripts .
    ?manuscript :manuscripts_id ?manuscript_id_int .
  }
  # manuscripts_location is a deprecated field in SDBM
  # OPTIONAL { ?manuscript :manuscripts_location ?location . }

  ## TRANSACTION INFORMATION

  OPTIONAL {
    ?sales_entry :sales_entry_id ?entry .
    ?sales_entry :sales_id ?sales_id .
    OPTIONAL {
      ?seller_agent :sale_agents_sale_id ?sales_entry .
      ?seller_agent :sale_agents_role "seller_or_holder" .
      ?seller_agent :sale_agents_agent_id/:names_id ?seller_id .
    }
    OPTIONAL {
      ?buyer_agent :sale_agents_sale_id ?sales_entry .
      ?buyer_agent :sale_agents_role "buyer" .
      ?buyer_agent :sale_agents_agent_id/:names_id ?buyer_id .
    }
    OPTIONAL {
      ?selling_agent_agent :sale_agents_sale_id ?sales_entry .
      ?selling_agent_agent :sale_agents_role "selling_agent" .
      ?selling_agent_agent :sale_agents_agent_id/:names_id ?selling_agent_id .
    }
  }

  ## MANUSCRIPT DETAILS ##

  OPTIONAL {
    ?provenance_entry :provenance_entry_id ?entry ;
                      :provenance_provenance_agent_id/:names_id ?prov_agent_id ;
                                                     :provenance_order ?prov_order .
    OPTIONAL { ?provenance_entry :provenance_comment ?prov_comment . }
  }

  # title
  ?entry_title :entry_titles_entry_id ?entry .
  ?entry_title :entry_titles_id ?title_id .
  OPTIONAL {
    ?entry_title :entry_titles_title|:entry_titles_common_title ?title .
    FILTER(STR(?title) != "")
  }
  OPTIONAL {
    ?entry_title :entry_titles_common_title ?common_title .
    FILTER(STR(?common_title) != "")
  }

  # author
  OPTIONAL {
    ?entry_author :entry_authors_entry_id ?entry .
    ?entry_author :entry_authors_author_id/:names_id ?author_id .
    ?entry_author :entry_authors_observed_name ?observed_author .
  }

  # creation date
  OPTIONAL {
    ?entry_date :entry_dates_entry_id ?entry .
    ?entry_date :entry_dates_id ?creation_date_id .
    ?entry_date :entry_dates_date_normalized_start ?creation_date_start .
    ?entry_date :entry_dates_date_normalized_end ?creation_date_end .
    ?entry_date :entry_dates_observed_date ?creation_date_observed .
  }

  # artist

  # scribe

  # language
  OPTIONAL {
    ?entry_language :entry_languages_entry_id ?entry .
    ?entry_language :entry_languages_language_id/:languages_id ?language_id .
    ?entry_language :entry_languages_language_id/:languages_name ?language_ .
    BIND(STRLANG(?language_, 'en') AS ?language)
  }

  # place
  OPTIONAL {
    ?entry_place :entry_places_entry_id ?entry .
    ?entry_place :entry_places_place_id/:places_id ?place_id .
  }

  # material
  OPTIONAL {
    ?entry_material :entry_materials_entry_id ?entry .
    ?entry_material :entry_materials_id ?material_id .
    ?entry_material :entry_materials_material ?material_ .
    BIND(STRLANG(?material_, 'en') AS ?material)
  }

  # use

  # folios

  # lines

  # columns

  # width
  OPTIONAL {
    ?entry :entries_width ?width_value .
  }

  # height

  # alternate size

  # full-page miniatures

  # large miniatures

  # small miniatures

  # unspec. sized miniatures

  # historiated initials

  # decorated initials

  # binding

  # manuscript link

  # other Info

  ## /MANUSCRIPT DETAILS ##

  ## SOURCE ##
  ?entry :entries_source_id/:sources_id ?source_id .

  # replace reification blank nodes with entry IDs?
  BIND(REPLACE(STR(?entry), "^.*\\/(.+)", "$1") as ?entry_id)

  # generate IRIs in LDF.fi namespace
  BIND(STR(?manuscript_id_int) AS ?manuscript_id_)
  BIND(COALESCE(?manuscript_id_, ?entry_id) AS ?manuscript_id)
  BIND(IRI(CONCAT(STR(mmm:), "work/", ?manuscript_id)) as ?work)
  BIND(IRI(CONCAT(STR(mmm:), "expression/", ?manuscript_id)) as ?expression)
  BIND(IRI(CONCAT(STR(mmm:), "expression_creation/", ?manuscript_id)) as ?expression_creation)
  BIND(IRI(CONCAT(STR(mmm:), "manifestation_singleton/", ?manuscript_id)) as ?manifestation_singleton)
  BIND(IRI(CONCAT(STR(mmm:), "production/", ?manuscript_id)) as ?production)
  BIND(IRI(CONCAT(STR(mmm:), "source/", STR(?source_id))) as ?source)
  BIND(IRI(CONCAT(STR(mmm:), "person/", STR(?author_id))) as ?author)
  BIND(IRI(CONCAT(STR(mmm:), "person/", STR(?seller_id))) as ?seller)
  BIND(IRI(CONCAT(STR(mmm:), "person/", STR(?buyer_id))) as ?buyer)
  BIND(IRI(CONCAT(STR(mmm:), "person/", STR(?selling_agent_id))) as ?selling_agent)
  BIND(IRI(CONCAT(STR(mmm:), "person/", STR(?prov_agent_id))) as ?prov_agent)
  BIND(IRI(CONCAT(STR(mmm:), "place/", STR(?place_id))) as ?place)
  BIND(IRI(CONCAT(STR(mmm:), "timespan/", STR(?creation_date_id))) as ?creation_timespan)
  BIND(IRI(CONCAT(STR(mmm:), "acquisition/", ?entry_id)) as ?acquisition_uri)
  BIND(IRI(CONCAT(STR(mmm:), "width/", ?entry_id)) as ?width_uri)
  BIND(CONCAT(STR(?creation_date_start),"-",STR(?creation_date_end)) as ?creation_date_label)
  BIND(COALESCE(?common_title, ?title, ?manuscript_id) as ?preflabel)  # TODO: Get most common value from ?title
  # TODO: for partial relations, take title as prefLabel

  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_author_", STR(?author_id))) as ?reification_author_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_owner_", STR(?prov_agent_id))) as ?reification_owner_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_expression_creation_place_", STR(?place))) as ?reification_expression_creation_place_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_expression_creation_time_", STR(?creation_date_id))) as ?reification_expression_creation_time_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_width_", STR(?width_value))) as ?reification_width_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_identifier_", ?manuscript_id)) as ?reification_id_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_material_", ?material_id)) as ?reification_material_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_language_", REPLACE(?language, " ", "-"))) as ?reification_language_uri)
  BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_label_", STR(?title_id))) as ?reification_label_uri)
  # BIND(IRI(CONCAT(STR(mmm:), "reification/", ?manuscript_id, "_label_", STR(?title_id), "_", SUBSTR(REPLACE(?title, "[\\\"\\~\\.\\-\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\/\\?\\#\\@\\%\\_\\{\\}\\[\\]\\^\\s\\`]", "-"), 0, 21))) as ?reification_label_uri)
}
