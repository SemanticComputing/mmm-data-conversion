PREFIX : <https://sdbm.library.upenn.edu/>
PREFIX frbroo: <http://erlangen-crm.org/efrbroo/>
PREFIX crm: <http://www.cidoc-crm.org/cidoc-crm/>
PREFIX ecrm: <http://erlangen-crm.org/current/>
PREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>
PREFIX mmm: <http://ldf.fi/mmm/>
PREFIX mmms: <http://ldf.fi/mmm/schema/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# TODO: OnSale

CONSTRUCT
{
  ?acquisition_uri a ?event_type ;  # Acquisition or Observation
    skos:prefLabel ?cat_title ;
    ?event_property ?manifestation_singleton ;
    ?event_seller_or_holder_property ?seller ;
    ecrm:P29_custody_received_by ?buyer ;
    mmms:carried_out_by_as_selling_agent ?selling_agent_mmm ;
    mmms:data_provider_url ?entry ;
    ecrm:P7_took_place_at ?source_agent_location ;
    # mmms:place_literal ?cat_location_literal ;
    ecrm:P4_has_time-span ?source_timespan_mmm ;
    mmms:had_sales_price ?monetary_amount_uri ;
    ecrm:P70i_is_documented_in ?source_mmm ;
    dct:source mmms:SDBM ;
    .

  ?source_timespan_mmm a ecrm:E52_Time-Span ;
    skos:prefLabel ?source_date_label ;
    ecrm:P82a_begin_of_the_begin ?source_date_begin_mmm ;
    ecrm:P82b_end_of_the_end ?source_date_end_mmm ;
    .

  ?monetary_amount_uri a ecrm:E97_Monetary_Amount ;
    ecrm:P180_has_currency ?sales_currency ;
    ecrm:P181_has_amount ?sales_price ;
    rdfs:comment ?sales_other_currency .
    # dct:source mmms:SDBM .
}
WHERE
{
  ?entry a :entries .
  FILTER(NOT EXISTS { ?entry :entries_deprecated true })

  OPTIONAL {
    ?entry_manuscript :entry_manuscripts_entry_id ?entry .
    ?entry_manuscript a :entry_manuscripts .
    OPTIONAL {
      ?entry_manuscript :entry_manuscripts_relation_type "is" .
      ?entry_manuscript :entry_manuscripts_manuscript_id ?manuscript .
      ?manuscript a :manuscripts .
    }
    OPTIONAL {
      ?entry_manuscript :entry_manuscripts_relation_type "partial" .
      ?entry_manuscript :entry_manuscripts_manuscript_id ?manuscript_parent .
      ?entry_manuscript :entry_manuscripts_entry_id ?entry_partial_uri .
      ?manuscript_parent a :manuscripts .
    }
    OPTIONAL {
      ?entry_manuscript :entry_manuscripts_relation_type "possible" .
      ?entry_manuscript :entry_manuscripts_manuscript_id ?manuscript .
      ?manuscript a :manuscripts .
    }
  }

  ## TRANSACTION INFORMATION

  OPTIONAL {
    # ?entry :entries_transaction_type "sale" or "gift"
    ?sales_entry :sales_entry_id ?entry .

    OPTIONAL {
      ?sales_entry :sales_price ?sales_price .
      FILTER(STR(?sales_price) != "")
    }
    OPTIONAL {
      ?sales_entry :sales_currency ?sales_currency .
      FILTER(STR(?sales_currency) != "")
  }
    OPTIONAL {
      ?sales_entry :sales_other_currency ?sales_other_currency .
      FILTER(STR(?sales_other_currency) != "")
  }
    OPTIONAL {
      ?sales_entry :sales_sold "Yes"
      BIND(ecrm:E10_Transfer_of_Custody as ?event_type)
      BIND(ecrm:P30_transferred_custody_of as ?event_property)
      BIND(ecrm:P28_custody_surrendered_by as ?event_seller_or_holder_property)
    }
    OPTIONAL {
      ?seller_agent :sale_agents_sale_id ?sales_entry .
      ?seller_agent :sale_agents_role "seller_or_holder" .
      ?seller_agent :sale_agents_agent_id ?seller_agent_ .
      FILTER NOT EXISTS { ?seller_agent_ :names_deleted true }
    }
    OPTIONAL {
      ?buyer_agent :sale_agents_sale_id ?sales_entry .
      ?buyer_agent :sale_agents_role "buyer" .
      ?buyer_agent :sale_agents_agent_id ?buyer_agent_ .
      FILTER NOT EXISTS { ?buyer_agent_ :names_deleted true }
      # ?buyer_agent_ :names_id ?buyer_id .
      BIND(ecrm:E10_Transfer_of_Custody as ?event_type)
      BIND(ecrm:P30_transferred_custody_of as ?event_property)
      BIND(ecrm:P28_custody_surrendered_by as ?event_seller_or_holder_property)
    }
    OPTIONAL {
      ?selling_agent_agent :sale_agents_sale_id ?sales_entry .
      ?selling_agent_agent :sale_agents_role "selling_agent" .
      ?selling_agent_agent :sale_agents_agent_id ?selling_agent_name .
      FILTER NOT EXISTS { ?selling_agent_name :names_deleted true }
      # ?selling_agent_name :names_id ?selling_agent_id .
      # ?selling_agent_name (^:name_places_name_id)/:name_places_place_id/:places_id ?place_local_id .
      # BIND(IRI(CONCAT(STR(mmm:), "place/", STR(?place_local_id))) as ?selling_agent_location)
    }
  }
  OPTIONAL {
    BIND(mmms:ManuscriptActivity as ?event_type)
    BIND(mmms:observed_manuscript as ?event_property)
    BIND(mmms:ownership_attributed_to as ?event_seller_or_holder_property)
  }

  ## SOURCE ##
  OPTIONAL {
    ?entry :entries_source_id ?entry_source .

    FILTER(NOT EXISTS { ?entry_source :sources_deleted true })

    OPTIONAL {
      # Collection catalogs
      ?entry_source :sources_source_type_id <https://sdbm.library.upenn.edu/source_types/2> .
      BIND(CONCAT(STR(mmm:), "collection/sdbm_") as ?source_namespace)
      BIND(ecrm:P46i_forms_part_of as ?property_to_collection)

    }
    OPTIONAL {
      BIND(CONCAT(STR(mmm:), "source/sdbm_") as ?source_namespace)
    }

    # TODO: if source has no title, generate one for acquisition/observation prefLabel
    OPTIONAL{
      ?entry_source :sources_title ?cat_title
      FILTER(STR(?cat_title) != "")
    }
    OPTIONAL{
      ?entry_source :sources_date ?source_date_raw
      FILTER(STR(?source_date_raw) != "")
    }
    OPTIONAL{
      ?source_agent :source_agents_source_id ?entry_source .
      ?source_agent :source_agents_agent_id ?source_agent_name .
      ?source_agent_name (^:name_places_name_id)/:name_places_place_id ?source_place .
      BIND(REPLACE(STR(?source_place), "^.*\\/(.+)", "$1") as ?source_place_id)
      BIND(IRI(CONCAT(STR(mmm:), "place/sdbm_", STR(?source_place_id))) as ?source_agent_location)
    }
  }

  # HANDLE DATES
  BIND(SUBSTR(?source_date_raw, 1, 4) as ?source_date_year)
  BIND(SUBSTR(?source_date_raw, 5, 2) as ?source_date_month_)
  BIND(SUBSTR(?source_date_raw, 7) as ?source_date_day_)

  OPTIONAL {
    FILTER (?source_date_month_ = "00")
    BIND("01" as ?source_date_begin_month_)
    BIND("12" as ?source_date_end_month_)
  }
  OPTIONAL {
    FILTER (?source_date_day_ = "00" && (?source_date_month_ = "02"))
    BIND("01" as ?source_date_begin_day_)
    BIND("28" as ?source_date_end_day_)
  }
  OPTIONAL {
    FILTER (?source_date_day_ = "00" && (?source_date_month_ = "04" || ?source_date_month_ = "06" || ?source_date_month_ = "09" || ?source_date_month_ = "11"))
    BIND("01" as ?source_date_begin_day_)
    BIND("30" as ?source_date_end_day_)
  }
  OPTIONAL {
    FILTER (?source_date_day_ = "00")
    BIND("01" as ?source_date_begin_day_)
    BIND("31" as ?source_date_end_day_)
  }
  BIND(COALESCE(?source_date_begin_month_, ?source_date_month_) as ?source_date_begin_month)
  BIND(COALESCE(?source_date_end_month_, ?source_date_month_) as ?source_date_end_month)
  BIND(COALESCE(?source_date_begin_day_, ?source_date_day_) as ?source_date_begin_day)
  BIND(COALESCE(?source_date_end_day_, ?source_date_day_) as ?source_date_end_day)

  BIND(?source_date_year + "-" + ?source_date_begin_month + "-" + ?source_date_begin_day as ?source_date_begin)
  BIND(?source_date_year + "-" + ?source_date_end_month + "-" + ?source_date_end_day as ?source_date_end)
  BIND(STRDT(?source_date_begin, xsd:date) as ?source_date_begin_mmm)
  BIND(STRDT(?source_date_end, xsd:date) as ?source_date_end_mmm)

  BIND(IF(?source_date_begin = ?source_date_end, ?source_date_begin, IF(?source_date_begin_month = ?source_date_end_month, ?source_date_begin + " - " + ?source_date_end, ?source_date_year)) as ?source_date_label)

  BIND(IRI(CONCAT("http://ldf.fi/mmm/time/sdbm_sources_", ?source_date_raw)) as ?source_timespan_mmm)

  # ENTRY IDS
  BIND(REPLACE(STR(?entry), "^.*\\/(.+)", "$1") as ?entry_id)
  BIND(REPLACE(STR(?entry_partial_uri), "^.*\\/(.+)", "$1") as ?entry_partial_id)

  # GENERATE IRIS IN LDF.FI NAMESPACE
  BIND(REPLACE(STR(?manuscript), "^.*\\/(.+)", "$1") as ?manuscript_id_)
  BIND(COALESCE(?manuscript_id_, "part_" + ?entry_partial_id, "orphan_" + ?entry_id) AS ?manuscript_id)
  BIND(IRI(CONCAT(STR(mmm:), "manifestation_singleton/sdbm_", ?manuscript_id)) as ?manifestation_singleton)

  BIND(REPLACE(STR(?manuscript_parent), "^.*\\/(.+)", "$1") as ?manuscript_parent_id)
  BIND(IRI(CONCAT(STR(mmm:), "manifestation_singleton/sdbm_", ?manuscript_parent_id)) as ?parent_manifestation_singleton)

  BIND(REPLACE(STR(?entry_source), "^.*\\/(.+)", "$1") as ?source_id)
  BIND(IRI(CONCAT(?source_namespace, ?source_id)) as ?source_mmm)

  BIND(REPLACE(STR(?seller_agent_), "^.*\\/(.+)", "$1") as ?seller_id)
  BIND(IRI(CONCAT(STR(mmm:), "actor/sdbm_", ?seller_id)) as ?seller)

  BIND(REPLACE(STR(?buyer_agent_), "^.*\\/(.+)", "$1") as ?buyer_id)
  BIND(IRI(CONCAT(STR(mmm:), "actor/sdbm_", ?buyer_id)) as ?buyer)

  BIND(REPLACE(STR(?selling_agent_name), "^.*\\/(.+)", "$1") as ?selling_agent_id)
  BIND(IRI(CONCAT(STR(mmm:), "actor/sdbm_", ?selling_agent_id)) as ?selling_agent_mmm)

  BIND(IRI(CONCAT(STR(mmm:), "event/sdbm_source_observation_", ?entry_id)) as ?acquisition_uri)

  BIND(REPLACE(STR(?sales_entry), "^.*\\/(.+)", "$1") as ?sales_entry_local_id)
  BIND(IRI(CONCAT(STR(mmm:), "monetary_amounts/sdbm_", ?sales_entry_local_id, SUBSTR(STR(COALESCE(?sales_currency, ?sales_price, ?sales_other_currency)), 0, 0))) as ?monetary_amount_uri)  # Bind only if related information
}
